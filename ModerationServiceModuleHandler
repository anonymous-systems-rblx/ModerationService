-- | Variables

local Module = script.Parent
local ModerationService = require(Module)
local MessagingService = game:GetService("MessagingService")
local Players = game:GetService("Players")
local HttpService = game:GetService("HttpService")

-- | Code

local currentVersion = Module:GetAttribute("Version")
local versionData
local versionSuccess, versionResult = pcall(function()
	versionData = HttpService:GetAsync("https://raw.githubusercontent.com/anonymous-systems-rblx/ModerationService/main/Version.txt")
end)
if versionSuccess then
	if not string.find(versionData, currentVersion) then
		warn("[ModerationService] You are currently not running on the most updated version of ModerationService!")
	end
else
	warn("[ModerationService] Failed to get Module Version \n Error:",versionResult)
end

Players.PlayerAdded:Connect(function(Player)
	local CheckBan = ModerationService:CheckBan(Player.UserId)
	if typeof(CheckBan) ~= "table" then return end
	
	local IsBanned = CheckBan[1]
	local BanReason = CheckBan[2]
	if IsBanned then
		Player:Kick(BanReason)
	elseif not IsBanned then
		return
	end
end)

MessagingService:SubscribeAsync("ModerationService_CreateAction", function(message)
	local MessageData = message.Data
	local UserId = MessageData[1]
	local Reason = MessageData[2]
	
	local Player = Players:GetPlayerByUserId(UserId)
	if not Player then return end
	Player:Kick(Reason)	
	return
end)

